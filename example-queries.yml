# File that defines endpoints for exposing Prometheus metrics for SQL result sets.
# It talks to a [SQL Agent](https://github.com/chop-dbhi/sql-agent) service that
# performs the query against the target database and returns the result set.
# The `driver`, `connection`, `sql`, and `params` options defined for each endpoint
# are passed to the service to execute the query. The other options are specific
# to this service.

# Name of the metric. Will be exposed as query_result_num_products
- num_products:
    # Name of the driver to use.
    driver: postgresql

    # Connection information.
    connection:
        host: example.org
        port: 5432
        user: postgres
        password: s3cre7
        database: products

    # SQL string. Parameters are name-based (not positional) and must be
    # prefixed with a colon. See `:category_id` in the query below for an example.
    # Must return single row, single column
    sql: >
        select count(product_id)
        from product
            inner join product_category
                on (product.category_id = product_category.id)
            inner join product_category_idx
                on (product_category.id = product_category_idx.category_id)
        where product_category_idx.category_id = :category_id
            or product_category_idx.ancestor_category_id = :category_id

    # Parameter values by name.
    params:
        category_id: 5

    # The time between query execution. This should be set relative to the frequency
    # of expected updates and the required granularity of changes.
    interval: 1h

# For faceted metrics provide the name of the metric-column in config, and return a resultset of multiple columns and rows
- sales_by_country:
    # Name of the driver to use.
    driver: postgresql

    # Connection information.
    connection:
        host: example.org
        port: 5432
        user: postgres
        password: s3cre7
        database: products

    sql: >
        select country, count(1) as cnt from sales

    # The time between query execution. This should be set relative to the frequency
    # of expected updates and the required granularity of changes.
    interval: 1h

    # The value for our metric is in "cnt", other columns are facets (exposed as labels)
    data-field: cnt

# For faceted metrics provide the name of the metric-column in config, and return a resultset of multiple columns and rows
- cpu:
    # Name of the driver to use.
    driver: postgresql

    # Connection information.
    connection:
        host: example.org
        port: 5432
        user: mssql
        password: s3cre7
        database: products

    sql: >
        SET NOCOUNT ON;
        SET ARITHABORT ON;
        SET QUOTED_IDENTIFIER ON;
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
        DECLARE @ms_ticks bigint;
        SET @ms_ticks = (Select ms_ticks From sys.dm_os_sys_info);
        DECLARE @maxEvents int = 1
        SELECT
          measurement = 'CPU (%)'
        , servername= REPLACE(@@SERVERNAME, '\', ':')
        , type = 'CPU usage'
        -- value
        , [SQL process] = ProcessUtilization
        , [External process]= 100 - SystemIdle - ProcessUtilization
        , [SystemIdle]
        FROM
        (
        SELECT TOP (@maxEvents)
          EventTime = CAST(DateAdd(ms, -1 * (@ms_ticks - timestamp_ms), GetUTCDate()) as datetime)
        , ProcessUtilization = CAST(ProcessUtilization as int)
        , SystemIdle = CAST(SystemIdle as int)
        FROM (SELECT Record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int') as SystemIdle,
                     Record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int') as ProcessUtilization,
                     timestamp as timestamp_ms
        FROM (SELECT timestamp, convert(xml, record) As Record
                FROM sys.dm_os_ring_buffers
                WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'
                    And record Like '%<SystemHealth>%') x) y
        ORDER BY timestamp_ms Desc
        ) as T;

    # The time between query execution. This should be set relative to the frequency
    # of expected updates and the required granularity of changes.
    interval: 1h

    # Name of the metric
    data-metric: "measurement"
    data-label-name: "process"

    # Values that should be added as labels to all metrics and excluded as 
    # separate metrics
    labels:
        - servername
        - type
    # Each key is an individual metric
    multi-dimensional: true